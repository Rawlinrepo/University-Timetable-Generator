
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id    Int    @id @default(autoincrement())
  name  String
  email String @unique
}

model Course {
  id                Int               @id @default(autoincrement())
  name              String
  year              Int
  subjects          Subject[]
  timetableEntries  TimetableEntry[]  // ðŸ‘ˆ added reverse relation
}

model Subject {
  id                Int               @id @default(autoincrement())
  name              String
  code              String            @unique
  type              SubjectType
  hoursPerWeek      Int
  courseId          Int
  course            Course            @relation(fields: [courseId], references: [id])
  facultyId         Int?
  faculty           Faculty?          @relation(fields: [facultyId], references: [id])
  timetableEntries  TimetableEntry[]  // ðŸ‘ˆ added reverse relation
}

model Faculty {
  id                Int               @id @default(autoincrement())
  name              String
  initials          String?
  subjects          Subject[]
  timetableEntries  TimetableEntry[]  // ðŸ‘ˆ added reverse relation
}

model Classroom {
  id                Int               @id @default(autoincrement())
  name              String @unique
  capacity          Int
  timetableEntries  TimetableEntry[]  // ðŸ‘ˆ added reverse relation
}

model TimeSlot {
  id                Int               @id @default(autoincrement())
  day               Day
  slotIndex         Int
  startTime         String
  endTime           String
  timetableEntries  TimetableEntry[]  // ðŸ‘ˆ added reverse relation
}

model TimetableEntry {
  id           Int       @id @default(autoincrement())
  courseId     Int
  subjectId    Int
  facultyId    Int
  classroomId  Int
  timeslotId   Int
  course       Course     @relation(fields: [courseId], references: [id])
  subject      Subject    @relation(fields: [subjectId], references: [id])
  faculty      Faculty    @relation(fields: [facultyId], references: [id])
  classroom    Classroom  @relation(fields: [classroomId], references: [id])
  timeslot     TimeSlot   @relation(fields: [timeslotId], references: [id])
  createdAt    DateTime   @default(now())
}

enum Day {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
}

enum SubjectType {
  THEORY
  LAB
}
